--- /dev/null	2016-10-05 05:29:17.000000000 -0700
+++ SuperLU_DIST_5.1.0.patch/make.inc	2016-10-05 05:26:46.000000000 -0700
@@ -0,0 +1,89 @@
+############################################################################
+#
+#  Program:         SuperLU_DIST
+#
+#  Module:          make.inc
+#
+#  Purpose:         Top-level Definitions
+#
+#  Creation date:   February 4, 1999   version alpha
+#
+#  Modified:	    September 1, 1999  version 1.0
+#                   March 15, 2003     version 2.0
+#		    November 1, 2007   version 2.1
+#		    September 1, 2011   version 3.0
+#		    October 1, 2014   version 4.0
+#
+############################################################################
+#
+#  The machine (platform) identifier to append to the library names
+# Carver: Intel compiler
+# PLAT		= _sp
+
+#
+#  The name of the libraries to be created/linked to
+#
<<<<<<< HEAD
+DSuperLUroot 	= ${HOME}/Release_Codes/SuperLU_DIST_5.1.0
+DSUPERLULIB   	= $(DSuperLUroot)/lib/libsuperlu_dist_5.1.0.a
=======
+DSuperLUroot 	= ${HOME}/Release_Codes/SuperLU_DIST_4.2
+DSUPERLULIB   	= $(DSuperLUroot)/lib/libsuperlu_dist_4.2.a
>>>>>>> afea5469dc53be6d694e789e06abb3c4ce9b62dd
+#
+BLASDEF	     	= -DUSE_VENDOR_BLAS
+BLASLIB	        = ${MKL}
+#
+################# parmetis 4.x.x, 32-bit integer ###########################
+PARMETIS_DIR	:= ${HOME}/Carver/lib/parmetis-4.0.3
+## parmetis 4.x.x, 64-bit integer
+# PARMETIS_DIR	:= ${HOME}/Carver/lib/parmetis-4.0.3_64
+
+# METISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libmetis -lmetis
+# PARMETISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libparmetis -lparmetis
+# I_PARMETIS := -I${PARMETIS_DIR}/include -I${PARMETIS_DIR}/metis/include
+############################################################################
+
+# Define the required Fortran libraries, if you use C compiler to link
+FLIBS	 	= 
+
+# Define all the libraries
+LIBS   	= $(DSUPERLULIB) $(PARMETISLIB) $(METISLIB) $(BLASLIB) $(FLIBS)
+
+# Include directories for header files
+INCS	= ${I_PARMETIS}
+
+ifeq "${ACC}" "GPU"
+CUDA_FLAGS = -DGPU_ACC
+INCS += -I/usr/common/usg/cuda/5.5/include
+LIBS += -L/usr/common/usg/cuda/5.5/lib64 -lcublas -lcudart 
+endif
+
+#
+#  The archiver and the flag(s) to use when building archive (library)
+#  If your system has no ranlib, set RANLIB = echo.
+#
+ARCH         	= ar
+ARCHFLAGS    	= cr
+RANLIB       	= ranlib
+
+
+############################################################################
+# C compiler setup
+CC           	= mpicc
+# CFLAGS should be set to be the C flags that include optimization
+CFLAGS          = ${CUDA_FLAGS} ${INCS} -std=c99 -O3 -Wall -openmp -fPIC \
+		-DDEBUGlevel=0 -DPRNTlevel=1 -DPROFlevel=0 \
+#		-D_LONGINT 
+#	-Wunused-variable 
+#
+# NOOPTS should be set to be the C flags that turn off any optimization
+NOOPTS		= -O0 -fPIC
+############################################################################
+# FORTRAN compiler setup
+FORTRAN         = mpif90
+F90FLAGS	= -fast -Mnomain -fPIC
+############################################################################
+LOADER	        = mpicc
+LOADOPTS	= -openmp -fPIC
+############################################################################
+#  C preprocessor defs for compilation (-DNoChange, -DAdd_, or -DUpCase)
+#
+#  Need follow the convention of how C calls a Fortran routine.
+#
+CDEFS        = -DNoChange
