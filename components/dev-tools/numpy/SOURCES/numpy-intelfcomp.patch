--- numpy-1.11.1/numpy/distutils/fcompiler/intel.py	2016-06-18 09:15:37.000000000 -0700
+++ numpy-1.11.1.patch/numpy/distutils/fcompiler/intel.py	2016-10-14 15:51:33.000000000 -0700
@@ -2,6 +2,7 @@
 from __future__ import division, absolute_import, print_function
 
 import sys
+from os import environ
 
 from numpy.distutils.ccompiler import simple_version_match
 from numpy.distutils.fcompiler import FCompiler, dummy_fortran_file
@@ -56,7 +57,7 @@
         return ['-fPIC']
 
     def get_flags_opt(self):  # Scipy test failures with -O2
-        return ['-xhost -openmp -fp-model strict -O1']
+        return ['-qopenmp -fp-model strict -O1']
 
     def get_flags_arch(self):
         return []
@@ -120,10 +121,10 @@
         return ['-fPIC']
 
     def get_flags_opt(self):  # Scipy test failures with -O2
-        return ['-openmp -fp-model strict -O1']
+        return ['-qopenmp -fp-model strict -O1']
 
     def get_flags_arch(self):
-        return ['']
+        return environ.get('ARCH_FLAGS', '-xSSE4.2 -axCORE-AVX2,CORE-AVX512').strip().split()
 
 # Is there no difference in the version string between the above compilers
 # and the Visual compilers?
@@ -166,10 +167,10 @@
         return []
 
     def get_flags_debug(self):
-        return ['/4Yb', '/d2']
+        return ["/4Yb", "/d2"]
 
     def get_flags_opt(self):
-        return ['/O1']  # Scipy test failures with /O2
+        return ["/fp:strict /Qopenmp /O1"]  # Scipy test failures with /O2
 
     def get_flags_arch(self):
         return ["/arch:IA32", "/QaxSSE3"]
@@ -205,7 +206,7 @@
     version_match = simple_version_match(start='Intel\(R\).*?64,')
 
     def get_flags_arch(self):
-        return ['']
+        return environ.get('ARCH_FLAGS', '/QxSSE4.2 /QaxCORE-AVX2,CORE-AVX512').strip().split()
 
 
 if __name__ == '__main__':
